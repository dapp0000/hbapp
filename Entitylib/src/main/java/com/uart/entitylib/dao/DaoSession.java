package com.uart.entitylib.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.uart.entitylib.entity.SysConfig;
import com.uart.entitylib.entity.SysConfigVersion;
import com.uart.entitylib.entity.RelaxData;
import com.uart.entitylib.entity.Resource;
import com.uart.entitylib.entity.RestDuration;
import com.uart.entitylib.entity.SleepData;
import com.uart.entitylib.entity.SysLog;
import com.uart.entitylib.entity.UsageRecord;
import com.uart.entitylib.entity.UserInfo;

import com.uart.entitylib.dao.SysConfigDao;
import com.uart.entitylib.dao.SysConfigVersionDao;
import com.uart.entitylib.dao.RelaxDataDao;
import com.uart.entitylib.dao.ResourceDao;
import com.uart.entitylib.dao.RestDurationDao;
import com.uart.entitylib.dao.SleepDataDao;
import com.uart.entitylib.dao.SysLogDao;
import com.uart.entitylib.dao.UsageRecordDao;
import com.uart.entitylib.dao.UserInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig sysConfigDaoConfig;
    private final DaoConfig sysConfigVersionDaoConfig;
    private final DaoConfig relaxDataDaoConfig;
    private final DaoConfig resourceDaoConfig;
    private final DaoConfig restDurationDaoConfig;
    private final DaoConfig sleepDataDaoConfig;
    private final DaoConfig sysLogDaoConfig;
    private final DaoConfig usageRecordDaoConfig;
    private final DaoConfig userInfoDaoConfig;

    private final SysConfigDao sysConfigDao;
    private final SysConfigVersionDao sysConfigVersionDao;
    private final RelaxDataDao relaxDataDao;
    private final ResourceDao resourceDao;
    private final RestDurationDao restDurationDao;
    private final SleepDataDao sleepDataDao;
    private final SysLogDao sysLogDao;
    private final UsageRecordDao usageRecordDao;
    private final UserInfoDao userInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        sysConfigDaoConfig = daoConfigMap.get(SysConfigDao.class).clone();
        sysConfigDaoConfig.initIdentityScope(type);

        sysConfigVersionDaoConfig = daoConfigMap.get(SysConfigVersionDao.class).clone();
        sysConfigVersionDaoConfig.initIdentityScope(type);

        relaxDataDaoConfig = daoConfigMap.get(RelaxDataDao.class).clone();
        relaxDataDaoConfig.initIdentityScope(type);

        resourceDaoConfig = daoConfigMap.get(ResourceDao.class).clone();
        resourceDaoConfig.initIdentityScope(type);

        restDurationDaoConfig = daoConfigMap.get(RestDurationDao.class).clone();
        restDurationDaoConfig.initIdentityScope(type);

        sleepDataDaoConfig = daoConfigMap.get(SleepDataDao.class).clone();
        sleepDataDaoConfig.initIdentityScope(type);

        sysLogDaoConfig = daoConfigMap.get(SysLogDao.class).clone();
        sysLogDaoConfig.initIdentityScope(type);

        usageRecordDaoConfig = daoConfigMap.get(UsageRecordDao.class).clone();
        usageRecordDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        sysConfigDao = new SysConfigDao(sysConfigDaoConfig, this);
        sysConfigVersionDao = new SysConfigVersionDao(sysConfigVersionDaoConfig, this);
        relaxDataDao = new RelaxDataDao(relaxDataDaoConfig, this);
        resourceDao = new ResourceDao(resourceDaoConfig, this);
        restDurationDao = new RestDurationDao(restDurationDaoConfig, this);
        sleepDataDao = new SleepDataDao(sleepDataDaoConfig, this);
        sysLogDao = new SysLogDao(sysLogDaoConfig, this);
        usageRecordDao = new UsageRecordDao(usageRecordDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);

        registerDao(SysConfig.class, sysConfigDao);
        registerDao(SysConfigVersion.class, sysConfigVersionDao);
        registerDao(RelaxData.class, relaxDataDao);
        registerDao(Resource.class, resourceDao);
        registerDao(RestDuration.class, restDurationDao);
        registerDao(SleepData.class, sleepDataDao);
        registerDao(SysLog.class, sysLogDao);
        registerDao(UsageRecord.class, usageRecordDao);
        registerDao(UserInfo.class, userInfoDao);
    }
    
    public void clear() {
        sysConfigDaoConfig.clearIdentityScope();
        sysConfigVersionDaoConfig.clearIdentityScope();
        relaxDataDaoConfig.clearIdentityScope();
        resourceDaoConfig.clearIdentityScope();
        restDurationDaoConfig.clearIdentityScope();
        sleepDataDaoConfig.clearIdentityScope();
        sysLogDaoConfig.clearIdentityScope();
        usageRecordDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
    }

    public SysConfigDao getSysConfigDao() {
        return sysConfigDao;
    }

    public SysConfigVersionDao getSysConfigVersionDao() {
        return sysConfigVersionDao;
    }

    public RelaxDataDao getRelaxDataDao() {
        return relaxDataDao;
    }

    public ResourceDao getResourceDao() {
        return resourceDao;
    }

    public RestDurationDao getRestDurationDao() {
        return restDurationDao;
    }

    public SleepDataDao getSleepDataDao() {
        return sleepDataDao;
    }

    public SysLogDao getSysLogDao() {
        return sysLogDao;
    }

    public UsageRecordDao getUsageRecordDao() {
        return usageRecordDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

}
